from symmer.operators.utils import check_jordan_independent
from symmer.operators import PauliwordOp

def test_check_jordan_independent_not_indp():
    """
    test case where XXX commutes globally and is generated by terms in set (so should return False)
    (cannot just test this term and then do row reduction of remaining terms as XII IXI and IIX generate this term!
    """

    op = PauliwordOp.from_dictionary({'XXX': (2+0j),
                                  'XII': (2+0j),
                                  'IIX': (2+0j),
                                  'IXI': (2+0j),
                                  'ZZI': (-2+0j),
                                  'IYY': (-2+0j)})
    j_ind_flag = check_jordan_independent(op)
    assert not j_ind_flag

def test_check_jordan_independent_3N():
    """
    test case where there are 3N Jordan Ind. terms
    """

    op = PauliwordOp.from_dictionary({'IX': (2+0j),
                                  'IY': (2+0j),
                                  'IZ': (2+0j),
                                  'ZI': (2+0j),
                                  'YI': (-2+0j),
                                  'XI': (-2+0j)})
    
    j_ind_flag = check_jordan_independent(op)
    assert j_ind_flag

def test_check_jordan_independent_larger_3N():
    """
    test case where there are too many Pauli operators to be Jordan indp.
    """

    op = PauliwordOp.from_dictionary({'IX': (2+0j),
                                  'IY': (2+0j),
                                  'IZ': (2+0j),
                                  'ZI': (2+0j),
                                  'YI': (-2+0j),
                                  'XI': (-2+0j),
                                  'XX': (-2+0j)})
    
    j_ind_flag = check_jordan_independent(op)
    assert not j_ind_flag

def test_check_jordan_independent_larger_XX_YY_ZZ():
    """
    test case where set of op is jordan dependent
    """

    op = PauliwordOp.from_dictionary({'XX': (2+0j),
                                        'YY': (2+0j),
                                        'ZZ': (2+0j)})
    
    j_ind_flag = check_jordan_independent(op)
    assert not j_ind_flag

def test_check_jordan_independent():
    op = PauliwordOp.from_dictionary({'XZXIIIZI': (1+0j),
                                      'IZZIZZZX': (1+0j),
                                      'IXXXZXZI': (1+0j),
                                      'IIZIIXZX': (1+0j),
                                      'XIXIIIIZ': (1+0j),
                                      'ZYIIZZIY': (1+0j),
                                      'IIIXIIII': (1+0j),
                                      'ZIZIIYZZ': (1+0j),
                                      'IIZIIIXY': (1+0j)})
    
    j_ind_flag = check_jordan_independent(op)
    assert j_ind_flag